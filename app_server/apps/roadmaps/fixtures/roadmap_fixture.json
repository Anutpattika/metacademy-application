[{"pk": 1, "model": "auth.permission", "fields": {"codename": "add_permission", "name": "Can add permission", "content_type": 1}}, {"pk": 2, "model": "auth.permission", "fields": {"codename": "change_permission", "name": "Can change permission", "content_type": 1}}, {"pk": 3, "model": "auth.permission", "fields": {"codename": "delete_permission", "name": "Can delete permission", "content_type": 1}}, {"pk": 4, "model": "auth.permission", "fields": {"codename": "add_group", "name": "Can add group", "content_type": 2}}, {"pk": 5, "model": "auth.permission", "fields": {"codename": "change_group", "name": "Can change group", "content_type": 2}}, {"pk": 6, "model": "auth.permission", "fields": {"codename": "delete_group", "name": "Can delete group", "content_type": 2}}, {"pk": 7, "model": "auth.permission", "fields": {"codename": "add_user", "name": "Can add user", "content_type": 3}}, {"pk": 8, "model": "auth.permission", "fields": {"codename": "change_user", "name": "Can change user", "content_type": 3}}, {"pk": 9, "model": "auth.permission", "fields": {"codename": "delete_user", "name": "Can delete user", "content_type": 3}}, {"pk": 10, "model": "auth.permission", "fields": {"codename": "add_contenttype", "name": "Can add content type", "content_type": 4}}, {"pk": 11, "model": "auth.permission", "fields": {"codename": "change_contenttype", "name": "Can change content type", "content_type": 4}}, {"pk": 12, "model": "auth.permission", "fields": {"codename": "delete_contenttype", "name": "Can delete content type", "content_type": 4}}, {"pk": 13, "model": "auth.permission", "fields": {"codename": "add_session", "name": "Can add session", "content_type": 5}}, {"pk": 14, "model": "auth.permission", "fields": {"codename": "change_session", "name": "Can change session", "content_type": 5}}, {"pk": 15, "model": "auth.permission", "fields": {"codename": "delete_session", "name": "Can delete session", "content_type": 5}}, {"pk": 16, "model": "auth.permission", "fields": {"codename": "add_site", "name": "Can add site", "content_type": 6}}, {"pk": 17, "model": "auth.permission", "fields": {"codename": "change_site", "name": "Can change site", "content_type": 6}}, {"pk": 18, "model": "auth.permission", "fields": {"codename": "delete_site", "name": "Can delete site", "content_type": 6}}, {"pk": 19, "model": "auth.permission", "fields": {"codename": "add_logentry", "name": "Can add log entry", "content_type": 7}}, {"pk": 20, "model": "auth.permission", "fields": {"codename": "change_logentry", "name": "Can change log entry", "content_type": 7}}, {"pk": 21, "model": "auth.permission", "fields": {"codename": "delete_logentry", "name": "Can delete log entry", "content_type": 7}}, {"pk": 22, "model": "auth.permission", "fields": {"codename": "add_migrationhistory", "name": "Can add migration history", "content_type": 8}}, {"pk": 23, "model": "auth.permission", "fields": {"codename": "change_migrationhistory", "name": "Can change migration history", "content_type": 8}}, {"pk": 24, "model": "auth.permission", "fields": {"codename": "delete_migrationhistory", "name": "Can delete migration history", "content_type": 8}}, {"pk": 25, "model": "auth.permission", "fields": {"codename": "add_profile", "name": "Can add profile", "content_type": 9}}, {"pk": 26, "model": "auth.permission", "fields": {"codename": "change_profile", "name": "Can change profile", "content_type": 9}}, {"pk": 27, "model": "auth.permission", "fields": {"codename": "delete_profile", "name": "Can delete profile", "content_type": 9}}, {"pk": 28, "model": "auth.permission", "fields": {"codename": "add_concepts", "name": "Can add concepts", "content_type": 10}}, {"pk": 29, "model": "auth.permission", "fields": {"codename": "change_concepts", "name": "Can change concepts", "content_type": 10}}, {"pk": 30, "model": "auth.permission", "fields": {"codename": "delete_concepts", "name": "Can delete concepts", "content_type": 10}}, {"pk": 31, "model": "auth.permission", "fields": {"codename": "add_roadmap", "name": "Can add roadmap", "content_type": 11}}, {"pk": 32, "model": "auth.permission", "fields": {"codename": "change_roadmap", "name": "Can change roadmap", "content_type": 11}}, {"pk": 33, "model": "auth.permission", "fields": {"codename": "delete_roadmap", "name": "Can delete roadmap", "content_type": 11}}, {"pk": 34, "model": "auth.permission", "fields": {"codename": "add_roadmapsettings", "name": "Can add roadmap settings", "content_type": 12}}, {"pk": 35, "model": "auth.permission", "fields": {"codename": "change_roadmapsettings", "name": "Can change roadmap settings", "content_type": 12}}, {"pk": 36, "model": "auth.permission", "fields": {"codename": "delete_roadmapsettings", "name": "Can delete roadmap settings", "content_type": 12}}, {"pk": 37, "model": "auth.permission", "fields": {"codename": "add_captchastore", "name": "Can add captcha store", "content_type": 13}}, {"pk": 38, "model": "auth.permission", "fields": {"codename": "change_captchastore", "name": "Can change captcha store", "content_type": 13}}, {"pk": 39, "model": "auth.permission", "fields": {"codename": "delete_captchastore", "name": "Can delete captcha store", "content_type": 13}}, {"pk": 40, "model": "auth.permission", "fields": {"codename": "add_lazyuser", "name": "Can add lazy user", "content_type": 14}}, {"pk": 41, "model": "auth.permission", "fields": {"codename": "change_lazyuser", "name": "Can change lazy user", "content_type": 14}}, {"pk": 42, "model": "auth.permission", "fields": {"codename": "delete_lazyuser", "name": "Can delete lazy user", "content_type": 14}}, {"pk": 43, "model": "auth.permission", "fields": {"codename": "add_revision", "name": "Can add revision", "content_type": 15}}, {"pk": 44, "model": "auth.permission", "fields": {"codename": "change_revision", "name": "Can change revision", "content_type": 15}}, {"pk": 45, "model": "auth.permission", "fields": {"codename": "delete_revision", "name": "Can delete revision", "content_type": 15}}, {"pk": 46, "model": "auth.permission", "fields": {"codename": "add_version", "name": "Can add version", "content_type": 16}}, {"pk": 47, "model": "auth.permission", "fields": {"codename": "change_version", "name": "Can change version", "content_type": 16}}, {"pk": 48, "model": "auth.permission", "fields": {"codename": "delete_version", "name": "Can delete version", "content_type": 16}}, {"pk": 49, "model": "auth.permission", "fields": {"codename": "add_concept", "name": "Can add concept", "content_type": 17}}, {"pk": 50, "model": "auth.permission", "fields": {"codename": "change_concept", "name": "Can change concept", "content_type": 17}}, {"pk": 51, "model": "auth.permission", "fields": {"codename": "delete_concept", "name": "Can delete concept", "content_type": 17}}, {"pk": 52, "model": "auth.permission", "fields": {"codename": "add_conceptsettings", "name": "Can add concept settings", "content_type": 18}}, {"pk": 53, "model": "auth.permission", "fields": {"codename": "change_conceptsettings", "name": "Can change concept settings", "content_type": 18}}, {"pk": 54, "model": "auth.permission", "fields": {"codename": "delete_conceptsettings", "name": "Can delete concept settings", "content_type": 18}}, {"pk": 55, "model": "auth.permission", "fields": {"codename": "add_globalresource", "name": "Can add global resource", "content_type": 19}}, {"pk": 56, "model": "auth.permission", "fields": {"codename": "change_globalresource", "name": "Can change global resource", "content_type": 19}}, {"pk": 57, "model": "auth.permission", "fields": {"codename": "delete_globalresource", "name": "Can delete global resource", "content_type": 19}}, {"pk": 58, "model": "auth.permission", "fields": {"codename": "add_conceptresource", "name": "Can add concept resource", "content_type": 20}}, {"pk": 59, "model": "auth.permission", "fields": {"codename": "change_conceptresource", "name": "Can change concept resource", "content_type": 20}}, {"pk": 60, "model": "auth.permission", "fields": {"codename": "delete_conceptresource", "name": "Can delete concept resource", "content_type": 20}}, {"pk": 61, "model": "auth.permission", "fields": {"codename": "add_graph", "name": "Can add graph", "content_type": 21}}, {"pk": 62, "model": "auth.permission", "fields": {"codename": "change_graph", "name": "Can change graph", "content_type": 21}}, {"pk": 63, "model": "auth.permission", "fields": {"codename": "delete_graph", "name": "Can delete graph", "content_type": 21}}, {"pk": 64, "model": "auth.permission", "fields": {"codename": "add_graphsettings", "name": "Can add graph settings", "content_type": 22}}, {"pk": 65, "model": "auth.permission", "fields": {"codename": "change_graphsettings", "name": "Can change graph settings", "content_type": 22}}, {"pk": 66, "model": "auth.permission", "fields": {"codename": "delete_graphsettings", "name": "Can delete graph settings", "content_type": 22}}, {"pk": 1, "model": "auth.user", "fields": {"username": "test_super", "first_name": "", "last_name": "", "is_active": true, "is_superuser": true, "is_staff": true, "last_login": "2014-01-15T06:48:16.533Z", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$12000$ENJTPu9L5Hm5$2AqrJcHsPl5rq6QBE6+i7xKzuylE863hGd0QI3m9ZbU=", "email": "test_super@test.test", "date_joined": "2014-01-11T05:39:53.065Z"}}, {"pk": 2, "model": "auth.user", "fields": {"username": "test", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-11T05:40:59.984Z", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$12000$OV4SXPilx0Iy$mQdqHmQuKQx0uqlBn0UiD2lcBqQSPD2Oj8AQ0mQOga0=", "email": "test@test.test", "date_joined": "2014-01-11T05:40:48.425Z"}}, {"pk": 3, "model": "auth.user", "fields": {"username": "test_roadmap_creator", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-11T06:04:56.462Z", "groups": [], "user_permissions": [], "password": "pbkdf2_sha256$12000$4z9cr6YveYyv$BA11XdnbndUAZiT9zDavq3oP6eeTLU/OWgxvXnRcfH8=", "email": "test_roadmap_creator@test.test", "date_joined": "2014-01-11T05:41:18.693Z"}}, {"pk": 4, "model": "auth.user", "fields": {"username": "3e8d61951d6544c1bd5a4c9810ce16", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-11T22:00:24.241Z", "groups": [], "user_permissions": [], "password": "!eZP1oTsMjGiyenbPNhDqR2ntsOTsIFoLeOhLr2BI", "email": "", "date_joined": "2014-01-11T22:00:24.234Z"}}, {"pk": 5, "model": "auth.user", "fields": {"username": "f8f9f50737e8418ea950bcead30cc1", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T02:22:20.915Z", "groups": [], "user_permissions": [], "password": "!2vkMlJCYvNsGnOFGcNkp8O1DPESCIUiznI0xPhvC", "email": "", "date_joined": "2014-01-12T02:22:20.905Z"}}, {"pk": 6, "model": "auth.user", "fields": {"username": "1bc61b9d192f4e658345bc4da8b184", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T02:39:48.339Z", "groups": [], "user_permissions": [], "password": "!QcFdkNKC9NlNLI2FQ2kcr9GdKhLL6esPNrCcdaDJ", "email": "", "date_joined": "2014-01-12T02:39:48.330Z"}}, {"pk": 7, "model": "auth.user", "fields": {"username": "2fd9e709403746f9be2b8571694a9e", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T04:24:41.527Z", "groups": [], "user_permissions": [], "password": "!D1siHj6trFJNVQ7lf3F138wkdA4T7P4ZvElM6cq1", "email": "", "date_joined": "2014-01-12T04:24:41.519Z"}}, {"pk": 8, "model": "auth.user", "fields": {"username": "51ae2294ec0e4b80a45ae4f878cb18", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T04:24:45.884Z", "groups": [], "user_permissions": [], "password": "!mOLLW6YrYl3uadYQX03IaoMDb1A1smqwPFZVHFzq", "email": "", "date_joined": "2014-01-12T04:24:45.874Z"}}, {"pk": 9, "model": "auth.user", "fields": {"username": "2e89ddc311a548cfa237e94a2d381a", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T04:27:08.120Z", "groups": [], "user_permissions": [], "password": "!nnmDtE8nsvPjKTtrzIztIsOpTVmlRoXULBNAxyqS", "email": "", "date_joined": "2014-01-12T04:27:08.111Z"}}, {"pk": 10, "model": "auth.user", "fields": {"username": "f7c87f20a7784608881547d22ce25e", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T04:27:13.470Z", "groups": [], "user_permissions": [], "password": "!ZR1tznGN66Q3LfqwAtYoIt9aSrXJr81ZMrc1zryo", "email": "", "date_joined": "2014-01-12T04:27:13.459Z"}}, {"pk": 11, "model": "auth.user", "fields": {"username": "068b011cc2364401851032c63b9b4a", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T04:27:48.725Z", "groups": [], "user_permissions": [], "password": "!WkmOKMtZOzjaFlMg2yvLcifEmeS9DpdBJAc3ohDe", "email": "", "date_joined": "2014-01-12T04:27:48.717Z"}}, {"pk": 12, "model": "auth.user", "fields": {"username": "3122a209335f43f383a33b212f1223", "first_name": "", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2014-01-12T04:51:49.641Z", "groups": [], "user_permissions": [], "password": "!pDK1aHhn7ieRZxxVGrtBkeAIlYbCFWNSasYiQnm9", "email": "", "date_joined": "2014-01-12T04:51:49.633Z"}}, {"pk": "0tablnic226i87x8oyp4qlphvqg97z11", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T02:39:48.368Z", "session_data": "MGU4ZTMxZTJjNGJhNjY0Yjc5MWIxZmE1YzdmNzZkNDEzODAwNmU0Yjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjo2fQ=="}}, {"pk": "9kp6e72lyjfbti2uku8uzlcqlg5drok4", "model": "sessions.session", "fields": {"expire_date": "2014-01-29T06:48:16.536Z", "session_data": "MGE4Y2VmOTAxNWJlYTU4NWZjODc4ODdhYzljZmM5NDIyYWM2OGQ5Mjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6MX0="}}, {"pk": "a8xmbphpvakxyeozuo2f39omgufsvbxx", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T04:27:48.749Z", "session_data": "YzM0MjQxMDY5Y2M5NWI1NDJlNTI1ZDRmM2Y3MTFjMjBjMjU1ZDY5MTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjoxMX0="}}, {"pk": "b55gfauygqe5x2jdmtble87vz0n3v5xq", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T04:51:49.668Z", "session_data": "NGNhNTYxZGM2ZDc0YTAxYzk2ZGRiYmIyNWU2MDQ1YjY2NWZiYTdiNTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjoxMn0="}}, {"pk": "e64wlr8j2zzn5g95nubj5sw9etrv1p0u", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T04:24:41.559Z", "session_data": "NDUwMTkxYWRjMmM1ZmI0OGM0YTdkZmIwYzA1ZmYxNmM4Yjk2ZTFlMTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjo3fQ=="}}, {"pk": "lhmsx9qkvqrdw5rxbt6ya1bjr9ns7pqm", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T04:24:45.912Z", "session_data": "OWY5ODgwNDE4YzUyZTNmZjZlNDQyMzViMWIxMzRiNjg2MDhkNzQyMTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjo4fQ=="}}, {"pk": "nz25duldhgnzw7panlkg8ta058yurr78", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T04:27:08.148Z", "session_data": "NjUxNjk5Y2U3MzRkMTZmYWU2MjEzZjVlMWE2ZjQ2Mjg4Y2RjYzYwZjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjo5fQ=="}}, {"pk": "uvn4wabu3bntuy9mzuyc945ze4v1pe1p", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T04:27:13.516Z", "session_data": "NjhkODU3Y2FkMDUwZjlhYjhkMjc3ODNiNGM1OGViYzI3NjA0NjU3OTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjoxMH0="}}, {"pk": "yjkgvikcxuqa36540osh5gga5t30oyib", "model": "sessions.session", "fields": {"expire_date": "2014-01-26T02:22:20.935Z", "session_data": "MDQ4MWE0Yjk5ZjhlNWY3YjA1ODAzZGI4M2UxNzUzNjVhZGNhOTgwYjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImxhenlzaWdudXAuYmFja2VuZHMuTGF6eVNpZ251cEJhY2tlbmQiLCJfYXV0aF91c2VyX2lkIjo1fQ=="}}, {"pk": 1, "model": "sites.site", "fields": {"domain": "example.com", "name": "example.com"}}, {"pk": 1, "model": "user_management.profile", "fields": {}}, {"pk": 2, "model": "user_management.profile", "fields": {}}, {"pk": 3, "model": "user_management.profile", "fields": {}}, {"pk": 5, "model": "user_management.profile", "fields": {}}, {"pk": "fyslhiko", "model": "user_management.concepts", "fields": {"learned_uprofs": [5], "starred_uprofs": [5]}}, {"pk": 1, "model": "roadmaps.roadmap", "fields": {"body": "Change\r\nThis is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\r\n\r\n## A Two-Minute Overview\r\n\r\n### Fundamentals\r\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\r\n\r\nPlacing a blank line between two text segments creates a new paragraph.\r\n\r\nOr you could use a blockquote to say something\r\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\r\n\r\n### Links\r\n\r\nHere is an external link to the [free software foundation](http://www.fsf.org)\r\n\r\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\r\n\r\n\r\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\r\n\r\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\r\n\r\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\r\n\r\n### Lists\r\n\r\nAnd of course, you can use lists:\r\n\r\n* here is a list item\r\n* here is another list item\r\n    * here is an embedded list item\r\n* back to the outer layer\r\n\r\nOr numbered lists\r\n\r\n1. Here's a numbered element\r\n84.  You can use any number to start a numbered list\r\n    902. here's an embedded numbered list item\r\n\r\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\r\n* oops\r\n* this is wrong\r\n    * so, so wrong\r\n\r\n### Code\r\nPlace inline code between backticks such as `printf()` or specify block-code via\r\n\r\n```\r\nimport sys\r\nprint sys.copyright\r\n```\r\n\r\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\r\n\r\n\r\n### Math\r\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\neq z^n \\forall n > 2$$\r\n\r\n### Tables\r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell\r\n\r\n### Multimedia\r\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\r\n", "version_num": 2, "author": "me", "title": "A public test roadmap", "audience": "test programs", "blurb": "writing this for a test fixture"}}, {"pk": 2, "model": "roadmaps.roadmap", "fields": {"body": "This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\r\n\r\n## A Two-Minute Overview\r\n\r\n### Fundamentals\r\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\r\n\r\nPlacing a blank line between two text segments creates a new paragraph.\r\n\r\nOr you could use a blockquote to say something\r\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\r\n\r\n### Links\r\n\r\nHere is an external link to the [free software foundation](http://www.fsf.org)\r\n\r\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\r\n\r\n\r\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\r\n\r\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\r\n\r\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\r\n\r\n### Lists\r\n\r\nAnd of course, you can use lists:\r\n\r\n* here is a list item\r\n* here is another list item\r\n    * here is an embedded list item\r\n* back to the outer layer\r\n\r\nOr numbered lists\r\n\r\n1. Here's a numbered element\r\n84.  You can use any number to start a numbered list\r\n    902. here's an embedded numbered list item\r\n\r\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\r\n* oops\r\n* this is wrong\r\n    * so, so wrong\r\n\r\n### Code\r\nPlace inline code between backticks such as `printf()` or specify block-code via\r\n\r\n```\r\nimport sys\r\nprint sys.copyright\r\n```\r\n\r\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\r\n\r\n\r\n### Math\r\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\neq z^n \\forall n > 2$$\r\n\r\n### Tables\r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell\r\n\r\n### Multimedia\r\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\r\n", "version_num": 0, "author": "ad", "title": "a", "audience": "sdaf", "blurb": "sadf"}}, {"pk": 3, "model": "roadmaps.roadmap", "fields": {"body": "This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\r\n\r\n## A Two-Minute Overview\r\n\r\n### Fundamentals\r\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\r\n\r\nPlacing a blank line between two text segments creates a new paragraph.\r\n\r\nOr you could use a blockquote to say something\r\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\r\n\r\n### Links\r\n\r\nHere is an external link to the [free software foundation](http://www.fsf.org)\r\n\r\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\r\n\r\n\r\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\r\n\r\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\r\n\r\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\r\n\r\n### Lists\r\n\r\nAnd of course, you can use lists:\r\n\r\n* here is a list item\r\n* here is another list item\r\n    * here is an embedded list item\r\n* back to the outer layer\r\n\r\nOr numbered lists\r\n\r\n1. Here's a numbered element\r\n84.  You can use any number to start a numbered list\r\n    902. here's an embedded numbered list item\r\n\r\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\r\n* oops\r\n* this is wrong\r\n    * so, so wrong\r\n\r\n### Code\r\nPlace inline code between backticks such as `printf()` or specify block-code via\r\n\r\n```\r\nimport sys\r\nprint sys.copyright\r\n```\r\n\r\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\r\n\r\n\r\n### Math\r\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\neq z^n \\forall n > 2$$\r\n\r\n### Tables\r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell\r\n\r\n### Multimedia\r\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\r\n", "version_num": 0, "author": "adlfk", "title": "asfdk", "audience": "asfdlk", "blurb": "saldfk"}}, {"pk": 4, "model": "roadmaps.roadmap", "fields": {"body": "This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\r\n\r\n## A Two-Minute Overview\r\n\r\n### Fundamentals\r\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\r\n\r\nPlacing a blank line between two text segments creates a new paragraph.\r\n\r\nOr you could use a blockquote to say something\r\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\r\n\r\n### Links\r\n\r\nHere is an external link to the [free software foundation](http://www.fsf.org)\r\n\r\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\r\n\r\n\r\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\r\n\r\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\r\n\r\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\r\n\r\n### Lists\r\n\r\nAnd of course, you can use lists:\r\n\r\n* here is a list item\r\n* here is another list item\r\n    * here is an embedded list item\r\n* back to the outer layer\r\n\r\nOr numbered lists\r\n\r\n1. Here's a numbered element\r\n84.  You can use any number to start a numbered list\r\n    902. here's an embedded numbered list item\r\n\r\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\r\n* oops\r\n* this is wrong\r\n    * so, so wrong\r\n\r\n### Code\r\nPlace inline code between backticks such as `printf()` or specify block-code via\r\n\r\n```\r\nimport sys\r\nprint sys.copyright\r\n```\r\n\r\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\r\n\r\n\r\n### Math\r\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\neq z^n \\forall n > 2$$\r\n\r\n### Tables\r\nFirst Header  | Second Header\r\n------------- | -------------\r\nContent Cell  | Content Cell\r\nContent Cell  | Content Cell\r\n\r\n### Multimedia\r\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\r\n", "version_num": 0, "author": "yaya", "title": "title", "audience": "asdf", "blurb": "sadfa"}}, {"pk": 1, "model": "roadmaps.roadmapsettings", "fields": {"sudo_listed_in_main": true, "url_tag": "test", "owners": [3], "creator": 3, "editors": [], "published": true, "listed_in_main": true}}, {"pk": 2, "model": "roadmaps.roadmapsettings", "fields": {"sudo_listed_in_main": true, "url_tag": "asf", "owners": [1], "creator": 1, "editors": [], "published": false, "listed_in_main": true}}, {"pk": 3, "model": "roadmaps.roadmapsettings", "fields": {"sudo_listed_in_main": true, "url_tag": "asdlfjas", "owners": [1], "creator": 1, "editors": [], "published": true, "listed_in_main": false}}, {"pk": 4, "model": "roadmaps.roadmapsettings", "fields": {"sudo_listed_in_main": true, "url_tag": "asdfa", "owners": [1], "creator": 1, "editors": [], "published": false, "listed_in_main": false}}, {"pk": 1, "model": "captcha.captchastore", "fields": {"challenge": "9-1=", "hashkey": "a0b1ca8aaa2e34c15954821a8ad510fc8f2ee850", "response": "8", "expiration": "2014-01-11T22:05:24.268Z"}}, {"pk": 2, "model": "captcha.captchastore", "fields": {"challenge": "9+9=", "hashkey": "d8e0583f4e4627e04e04a98ce5b1fd08e27e0f2f", "response": "18", "expiration": "2014-01-11T22:05:26.611Z"}}, {"pk": 3, "model": "captcha.captchastore", "fields": {"challenge": "9-3=", "hashkey": "1033f4a33bec97ae70df5d8026cd2bfb5ac75fbd", "response": "6", "expiration": "2014-01-12T02:29:30.228Z"}}, {"pk": 4, "model": "captcha.captchastore", "fields": {"challenge": "2*10=", "hashkey": "a88eee8489aa9c8d5ae79ede6bd17f8830ba50af", "response": "20", "expiration": "2014-01-12T02:34:33.908Z"}}, {"pk": 5, "model": "captcha.captchastore", "fields": {"challenge": "9+2=", "hashkey": "27a0a4fb86ef9c655945ee0121336051b8e6d82b", "response": "11", "expiration": "2014-01-12T02:42:35.376Z"}}, {"pk": 6, "model": "captcha.captchastore", "fields": {"challenge": "8-6=", "hashkey": "868a1cb07bf1f2124e08f88d60a96c6a3ddbe865", "response": "2", "expiration": "2014-01-12T02:42:46.965Z"}}, {"pk": 7, "model": "captcha.captchastore", "fields": {"challenge": "3*7=", "hashkey": "61a636bb7d7f9c6d38846e33601ead507a91532d", "response": "21", "expiration": "2014-01-12T02:44:48.362Z"}}, {"pk": 8, "model": "captcha.captchastore", "fields": {"challenge": "9*10=", "hashkey": "ca81511c2e7e36844d15bd0be290434da4281bca", "response": "90", "expiration": "2014-01-12T04:29:41.552Z"}}, {"pk": 9, "model": "captcha.captchastore", "fields": {"challenge": "1+5=", "hashkey": "071e873d10add81a54757457d243188888073509", "response": "6", "expiration": "2014-01-12T04:29:45.906Z"}}, {"pk": 10, "model": "captcha.captchastore", "fields": {"challenge": "1*1=", "hashkey": "22195600c7af235dfd8bff00013aa43a444ae3f8", "response": "1", "expiration": "2014-01-12T04:32:08.142Z"}}, {"pk": 11, "model": "captcha.captchastore", "fields": {"challenge": "6+3=", "hashkey": "ae7f754962d72e0d4744796be00cc7638f03ccc6", "response": "9", "expiration": "2014-01-12T04:32:13.496Z"}}, {"pk": 12, "model": "captcha.captchastore", "fields": {"challenge": "3+1=", "hashkey": "a10dfb299facbbfd98459e16d5e5dc727d14dbb5", "response": "4", "expiration": "2014-01-12T04:32:48.744Z"}}, {"pk": 13, "model": "captcha.captchastore", "fields": {"challenge": "6+2=", "hashkey": "df8b31e4ccfdb1f39c9134cb70ecb58de07a30b1", "response": "8", "expiration": "2014-01-12T04:56:49.660Z"}}, {"pk": 1, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:25.892Z", "app_name": "user_management", "migration": "0001_initial"}}, {"pk": 2, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.039Z", "app_name": "user_management", "migration": "0002_auto__add_starredconcept"}}, {"pk": 3, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.087Z", "app_name": "user_management", "migration": "0003_auto__add_concepts"}}, {"pk": 4, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.114Z", "app_name": "user_management", "migration": "0004_change_concept_representation"}}, {"pk": 5, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.185Z", "app_name": "user_management", "migration": "0005_auto__del_learnedconcept__del_starredconcept"}}, {"pk": 6, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.256Z", "app_name": "roadmaps", "migration": "0001_initial"}}, {"pk": 7, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.302Z", "app_name": "roadmaps", "migration": "0002_auto__add_field_roadmap_blurb"}}, {"pk": 8, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.334Z", "app_name": "roadmaps", "migration": "0003_auto__add_field_roadmap_version_num"}}, {"pk": 9, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.430Z", "app_name": "roadmaps", "migration": "0004_auto__add_roadmapsettings__add_unique_roadmapsettings_creator_url_tag_"}}, {"pk": 10, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.457Z", "app_name": "roadmaps", "migration": "0005_auto__add_field_roadmapsettings_listed_in_main"}}, {"pk": 11, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.486Z", "app_name": "roadmaps", "migration": "0006_auto__chg_field_roadmapsettings_creator"}}, {"pk": 12, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.528Z", "app_name": "roadmaps", "migration": "0007_auto__add_field_roadmapsettings_published"}}, {"pk": 13, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.549Z", "app_name": "roadmaps", "migration": "0008_auto"}}, {"pk": 14, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.600Z", "app_name": "roadmaps", "migration": "0009_auto"}}, {"pk": 15, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.630Z", "app_name": "roadmaps", "migration": "0010_auto__add_field_roadmapsettings_sudo_listed_in_main"}}, {"pk": 16, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.696Z", "app_name": "captcha", "migration": "0001_initial"}}, {"pk": 17, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.773Z", "app_name": "lazysignup", "migration": "0001_initial"}}, {"pk": 18, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.809Z", "app_name": "lazysignup", "migration": "0002_auto__add_field_lazyuser_created"}}, {"pk": 19, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.903Z", "app_name": "reversion", "migration": "0001_initial"}}, {"pk": 20, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.932Z", "app_name": "reversion", "migration": "0002_auto__add_field_version_type"}}, {"pk": 21, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.976Z", "app_name": "reversion", "migration": "0003_auto__add_field_version_object_id_int"}}, {"pk": 22, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:26.989Z", "app_name": "reversion", "migration": "0004_populate_object_id_int"}}, {"pk": 23, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:27.013Z", "app_name": "reversion", "migration": "0005_auto__add_field_revision_manager_slug"}}, {"pk": 24, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:27.036Z", "app_name": "reversion", "migration": "0006_remove_delete_revisions"}}, {"pk": 25, "model": "south.migrationhistory", "fields": {"applied": "2014-01-11T05:39:27.076Z", "app_name": "reversion", "migration": "0007_auto__del_field_version_type"}}, {"pk": 26, "model": "south.migrationhistory", "fields": {"applied": "2014-01-15T07:02:07.298Z", "app_name": "graph", "migration": "0001_initial"}}, {"pk": 1, "model": "lazysignup.lazyuser", "fields": {"user": 4, "created": "2014-01-11T22:00:24.237Z"}}, {"pk": 2, "model": "lazysignup.lazyuser", "fields": {"user": 5, "created": "2014-01-12T02:22:20.908Z"}}, {"pk": 3, "model": "lazysignup.lazyuser", "fields": {"user": 6, "created": "2014-01-12T02:39:48.335Z"}}, {"pk": 4, "model": "lazysignup.lazyuser", "fields": {"user": 7, "created": "2014-01-12T04:24:41.524Z"}}, {"pk": 5, "model": "lazysignup.lazyuser", "fields": {"user": 8, "created": "2014-01-12T04:24:45.879Z"}}, {"pk": 6, "model": "lazysignup.lazyuser", "fields": {"user": 9, "created": "2014-01-12T04:27:08.115Z"}}, {"pk": 7, "model": "lazysignup.lazyuser", "fields": {"user": 10, "created": "2014-01-12T04:27:13.464Z"}}, {"pk": 8, "model": "lazysignup.lazyuser", "fields": {"user": 11, "created": "2014-01-12T04:27:48.721Z"}}, {"pk": 9, "model": "lazysignup.lazyuser", "fields": {"user": 12, "created": "2014-01-12T04:51:49.637Z"}}, {"pk": 1, "model": "reversion.revision", "fields": {"comment": "", "date_created": "2014-01-11T05:42:13.311Z", "manager_slug": "default", "user": 3}}, {"pk": 2, "model": "reversion.revision", "fields": {"comment": "", "date_created": "2014-01-11T06:06:50.178Z", "manager_slug": "default", "user": 3}}, {"pk": 3, "model": "reversion.revision", "fields": {"comment": "", "date_created": "2014-01-11T20:13:04.153Z", "manager_slug": "default", "user": 1}}, {"pk": 4, "model": "reversion.revision", "fields": {"comment": "", "date_created": "2014-01-11T21:20:41.013Z", "manager_slug": "default", "user": 1}}, {"pk": 5, "model": "reversion.revision", "fields": {"comment": "", "date_created": "2014-01-11T22:09:05.472Z", "manager_slug": "default", "user": 1}}, {"pk": 1, "model": "reversion.version", "fields": {"format": "json", "object_repr": "Roadmap object", "object_id": "1", "content_type": 11, "object_id_int": 1, "serialized_data": "[{\"pk\": 1, \"model\": \"roadmaps.roadmap\", \"fields\": {\"body\": \"This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\\r\\n\\r\\n## A Two-Minute Overview\\r\\n\\r\\n### Fundamentals\\r\\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\\r\\n\\r\\nPlacing a blank line between two text segments creates a new paragraph.\\r\\n\\r\\nOr you could use a blockquote to say something\\r\\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\\r\\n\\r\\n### Links\\r\\n\\r\\nHere is an external link to the [free software foundation](http://www.fsf.org)\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\\r\\n\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\\r\\n\\r\\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\\r\\n\\r\\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\\r\\n\\r\\n### Lists\\r\\n\\r\\nAnd of course, you can use lists:\\r\\n\\r\\n* here is a list item\\r\\n* here is another list item\\r\\n    * here is an embedded list item\\r\\n* back to the outer layer\\r\\n\\r\\nOr numbered lists\\r\\n\\r\\n1. Here's a numbered element\\r\\n84.  You can use any number to start a numbered list\\r\\n    902. here's an embedded numbered list item\\r\\n\\r\\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\\r\\n* oops\\r\\n* this is wrong\\r\\n    * so, so wrong\\r\\n\\r\\n### Code\\r\\nPlace inline code between backticks such as `printf()` or specify block-code via\\r\\n\\r\\n```\\r\\nimport sys\\r\\nprint sys.copyright\\r\\n```\\r\\n\\r\\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\\r\\n\\r\\n\\r\\n### Math\\r\\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\\\neq z^n \\\\forall n > 2$$\\r\\n\\r\\n### Tables\\r\\nFirst Header  | Second Header\\r\\n------------- | -------------\\r\\nContent Cell  | Content Cell\\r\\nContent Cell  | Content Cell\\r\\n\\r\\n### Multimedia\\r\\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\\r\\n\", \"version_num\": 0, \"author\": \"me\", \"title\": \"A public test roadmap\", \"audience\": \"test programs\", \"blurb\": \"writing this for a test fixture\"}}]", "revision": 1}}, {"pk": 2, "model": "reversion.version", "fields": {"format": "json", "object_repr": "Roadmap object", "object_id": "1", "content_type": 11, "object_id_int": 1, "serialized_data": "[{\"pk\": 1, \"model\": \"roadmaps.roadmap\", \"fields\": {\"body\": \"Change\\r\\nThis is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\\r\\n\\r\\n## A Two-Minute Overview\\r\\n\\r\\n### Fundamentals\\r\\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\\r\\n\\r\\nPlacing a blank line between two text segments creates a new paragraph.\\r\\n\\r\\nOr you could use a blockquote to say something\\r\\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\\r\\n\\r\\n### Links\\r\\n\\r\\nHere is an external link to the [free software foundation](http://www.fsf.org)\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\\r\\n\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\\r\\n\\r\\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\\r\\n\\r\\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\\r\\n\\r\\n### Lists\\r\\n\\r\\nAnd of course, you can use lists:\\r\\n\\r\\n* here is a list item\\r\\n* here is another list item\\r\\n    * here is an embedded list item\\r\\n* back to the outer layer\\r\\n\\r\\nOr numbered lists\\r\\n\\r\\n1. Here's a numbered element\\r\\n84.  You can use any number to start a numbered list\\r\\n    902. here's an embedded numbered list item\\r\\n\\r\\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\\r\\n* oops\\r\\n* this is wrong\\r\\n    * so, so wrong\\r\\n\\r\\n### Code\\r\\nPlace inline code between backticks such as `printf()` or specify block-code via\\r\\n\\r\\n```\\r\\nimport sys\\r\\nprint sys.copyright\\r\\n```\\r\\n\\r\\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\\r\\n\\r\\n\\r\\n### Math\\r\\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\\\neq z^n \\\\forall n > 2$$\\r\\n\\r\\n### Tables\\r\\nFirst Header  | Second Header\\r\\n------------- | -------------\\r\\nContent Cell  | Content Cell\\r\\nContent Cell  | Content Cell\\r\\n\\r\\n### Multimedia\\r\\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\\r\\n\", \"version_num\": 2, \"author\": \"me\", \"title\": \"A public test roadmap\", \"audience\": \"test programs\", \"blurb\": \"writing this for a test fixture\"}}]", "revision": 2}}, {"pk": 3, "model": "reversion.version", "fields": {"format": "json", "object_repr": "Roadmap object", "object_id": "2", "content_type": 11, "object_id_int": 2, "serialized_data": "[{\"pk\": 2, \"model\": \"roadmaps.roadmap\", \"fields\": {\"body\": \"This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\\r\\n\\r\\n## A Two-Minute Overview\\r\\n\\r\\n### Fundamentals\\r\\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\\r\\n\\r\\nPlacing a blank line between two text segments creates a new paragraph.\\r\\n\\r\\nOr you could use a blockquote to say something\\r\\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\\r\\n\\r\\n### Links\\r\\n\\r\\nHere is an external link to the [free software foundation](http://www.fsf.org)\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\\r\\n\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\\r\\n\\r\\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\\r\\n\\r\\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\\r\\n\\r\\n### Lists\\r\\n\\r\\nAnd of course, you can use lists:\\r\\n\\r\\n* here is a list item\\r\\n* here is another list item\\r\\n    * here is an embedded list item\\r\\n* back to the outer layer\\r\\n\\r\\nOr numbered lists\\r\\n\\r\\n1. Here's a numbered element\\r\\n84.  You can use any number to start a numbered list\\r\\n    902. here's an embedded numbered list item\\r\\n\\r\\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\\r\\n* oops\\r\\n* this is wrong\\r\\n    * so, so wrong\\r\\n\\r\\n### Code\\r\\nPlace inline code between backticks such as `printf()` or specify block-code via\\r\\n\\r\\n```\\r\\nimport sys\\r\\nprint sys.copyright\\r\\n```\\r\\n\\r\\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\\r\\n\\r\\n\\r\\n### Math\\r\\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\\\neq z^n \\\\forall n > 2$$\\r\\n\\r\\n### Tables\\r\\nFirst Header  | Second Header\\r\\n------------- | -------------\\r\\nContent Cell  | Content Cell\\r\\nContent Cell  | Content Cell\\r\\n\\r\\n### Multimedia\\r\\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\\r\\n\", \"version_num\": 0, \"author\": \"ad\", \"title\": \"a\", \"audience\": \"sdaf\", \"blurb\": \"sadf\"}}]", "revision": 3}}, {"pk": 4, "model": "reversion.version", "fields": {"format": "json", "object_repr": "Roadmap object", "object_id": "3", "content_type": 11, "object_id_int": 3, "serialized_data": "[{\"pk\": 3, \"model\": \"roadmaps.roadmap\", \"fields\": {\"body\": \"This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\\r\\n\\r\\n## A Two-Minute Overview\\r\\n\\r\\n### Fundamentals\\r\\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\\r\\n\\r\\nPlacing a blank line between two text segments creates a new paragraph.\\r\\n\\r\\nOr you could use a blockquote to say something\\r\\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\\r\\n\\r\\n### Links\\r\\n\\r\\nHere is an external link to the [free software foundation](http://www.fsf.org)\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\\r\\n\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\\r\\n\\r\\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\\r\\n\\r\\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\\r\\n\\r\\n### Lists\\r\\n\\r\\nAnd of course, you can use lists:\\r\\n\\r\\n* here is a list item\\r\\n* here is another list item\\r\\n    * here is an embedded list item\\r\\n* back to the outer layer\\r\\n\\r\\nOr numbered lists\\r\\n\\r\\n1. Here's a numbered element\\r\\n84.  You can use any number to start a numbered list\\r\\n    902. here's an embedded numbered list item\\r\\n\\r\\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\\r\\n* oops\\r\\n* this is wrong\\r\\n    * so, so wrong\\r\\n\\r\\n### Code\\r\\nPlace inline code between backticks such as `printf()` or specify block-code via\\r\\n\\r\\n```\\r\\nimport sys\\r\\nprint sys.copyright\\r\\n```\\r\\n\\r\\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\\r\\n\\r\\n\\r\\n### Math\\r\\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\\\neq z^n \\\\forall n > 2$$\\r\\n\\r\\n### Tables\\r\\nFirst Header  | Second Header\\r\\n------------- | -------------\\r\\nContent Cell  | Content Cell\\r\\nContent Cell  | Content Cell\\r\\n\\r\\n### Multimedia\\r\\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\\r\\n\", \"version_num\": 0, \"author\": \"adlfk\", \"title\": \"asfdk\", \"audience\": \"asfdlk\", \"blurb\": \"saldfk\"}}]", "revision": 4}}, {"pk": 5, "model": "reversion.version", "fields": {"format": "json", "object_repr": "Roadmap object", "object_id": "4", "content_type": 11, "object_id_int": 4, "serialized_data": "[{\"pk\": 4, \"model\": \"roadmaps.roadmap\", \"fields\": {\"body\": \"This is example text. After quickly learning the syntax, feel free to delete this text and start creating your roadmap. At any point, press the information buttons in the toolbar (above) to see this example roadmap.\\r\\n\\r\\n## A Two-Minute Overview\\r\\n\\r\\n### Fundamentals\\r\\nHere's some text, you can just write like normal text. You can also make text **bold** or *italics,* which should help you emphasize all the great things you want to say.\\r\\n\\r\\nPlacing a blank line between two text segments creates a new paragraph.\\r\\n\\r\\nOr you could use a blockquote to say something\\r\\n> I could have made money this way, and perhaps amused myself writing code. But I knew that at the end of my career, I would look back on years of building walls to divide people, and feel I had spent my life making the world a worse place. - Richard Stallman\\r\\n\\r\\n### Links\\r\\n\\r\\nHere is an external link to the [free software foundation](http://www.fsf.org)\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept's *tag*: [convolutional neural networks](convolutional_nets)\\r\\n\\r\\n\\r\\nHere is an internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural nets]]\\r\\n\\r\\nHere is an **incorrect/missing** internal link to a metacademy concept that uses the concept *title* with a shorthand link syntax:  [[convolutional neural networks]]\\r\\n\\r\\n**Note**: soon we will allow the use of titles instead of tags and will include an autocomplete type of feature\\r\\n\\r\\n### Lists\\r\\n\\r\\nAnd of course, you can use lists:\\r\\n\\r\\n* here is a list item\\r\\n* here is another list item\\r\\n    * here is an embedded list item\\r\\n* back to the outer layer\\r\\n\\r\\nOr numbered lists\\r\\n\\r\\n1. Here's a numbered element\\r\\n84.  You can use any number to start a numbered list\\r\\n    902. here's an embedded numbered list item\\r\\n\\r\\nMake sure to place a blank line before your lists, other you'll end up with a list that looks like:\\r\\n* oops\\r\\n* this is wrong\\r\\n    * so, so wrong\\r\\n\\r\\n### Code\\r\\nPlace inline code between backticks such as `printf()` or specify block-code via\\r\\n\\r\\n```\\r\\nimport sys\\r\\nprint sys.copyright\\r\\n```\\r\\n\\r\\nWe currently do not have code highlighting/coloring in place, but let us know if you want to use it and we can oblige: [send us feedback](/feedback)\\r\\n\\r\\n\\r\\n### Math\\r\\nMath support is possible via [MathJax](http://www.mathjax.org/) by using two dollar signs: $$x^n + y^n \\\\neq z^n \\\\forall n > 2$$\\r\\n\\r\\n### Tables\\r\\nFirst Header  | Second Header\\r\\n------------- | -------------\\r\\nContent Cell  | Content Cell\\r\\nContent Cell  | Content Cell\\r\\n\\r\\n### Multimedia\\r\\nWe currently do not support embedded images or videos, but let us know if you want this functionality: [send us feedback](/feedback)\\r\\n\", \"version_num\": 0, \"author\": \"yaya\", \"title\": \"title\", \"audience\": \"asdf\", \"blurb\": \"sadfa\"}}]", "revision": 5}}]